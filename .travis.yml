branches:
  only:
    - master
    - contrib-geo

language: python

python:
  - 2.6
  - 2.7

env:
  - REQUIREMENTS=1.3.X           TESTS="mutant boolean datetime file numeric related text web"     SETTINGS=test_project.settings
  - REQUIREMENTS=1.3.X-postgres  TESTS="mutant boolean datetime file numeric related text web"     SETTINGS=travis.postgres_settings TEMPLATE=template0
  - REQUIREMENTS=1.3.X-postgres  TESTS="mutant boolean datetime file numeric related text web geo" SETTINGS=travis.postgis_settings TEMPLATE=template_postgis
  - REQUIREMENTS=stable          TESTS="mutant boolean datetime file numeric related text web"     SETTINGS=test_project.settings
  - REQUIREMENTS=stable-postgres TESTS="mutant boolean datetime file numeric related text web"     SETTINGS=travis.postgres_settings TEMPLATE=template0
  - REQUIREMENTS=stable-postgres TESTS="mutant boolean datetime file numeric related text web geo" SETTINGS=travis.postgis_settings TEMPLATE=template_postgis
  - REQUIREMENTS=trunk           TESTS="mutant boolean datetime file numeric related text web"     SETTINGS=test_project.settings
  - REQUIREMENTS=trunk-postgres  TESTS="mutant boolean datetime file numeric related text web"     SETTINGS=travis.postgres_settings TEMPLATE=template0
  - REQUIREMENTS=trunk-postgres  TESTS="mutant boolean datetime file numeric related text web geo" SETTINGS=travis.postgis_settings TEMPLATE=template_postgis
  - REQUIREMENTS=mongo           TESTS="mutant boolean datetime file numeric nonrel text web"      SETTINGS=mongodb_settings

postgres:
  adapter: postgresql
  database: mutant
  username: postgres

install:
  - python setup.py install
  - pip install -r requirements/$REQUIREMENTS.txt --use-mirrors -I

before_script:
  - "if echo $SETTINGS | grep 'postgis'; then sudo apt-get update && sudo apt-get install binutils gdal-bin libproj-dev postgresql-9.1-postgis postgresql-server-dev-9.1; fi"
  - "if echo $SETTINGS | grep 'postgis'; then sudo su postgres -c './tests/travis/create_template_postgis-debian.sh'; fi"
  - "if echo $SETTINGS | grep -E '(postgres|postgis)'; then psql -c \"CREATE DATABASE mutant TEMPLATE ${TEMPLATE};\" -U postgres; fi"

script:
  - cd tests
  - python manage.py test $TESTS --settings=$SETTINGS
